name: Deploy to Remote Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  deploy:
    runs-on: ubuntu-24.04
    
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add remote host to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H lucille.finet.takima.cloud >> ~/.ssh/known_hosts

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy to remote server
        run: |
          ssh admin@lucille.finet.takima.cloud "
            # Create network if it doesn't exist
            docker network create app-network || true

            # Stop and remove old containers
            docker stop simple-api db httpd || true
            docker rm simple-api db httpd || true

            # Pull latest images
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api-database:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api-httpd:latest

            # Start database
            docker run -d --name db \
              --network app-network \
              -e POSTGRES_DB=db \
              -e POSTGRES_USER=usr \
              -e POSTGRES_PASSWORD=pwd \
              ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api-database:latest

            # Wait for database to be ready
            sleep 10

            # Start API
            docker run -d --name simple-api \
              --network app-network \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db \
              -e SPRING_DATASOURCE_USERNAME=usr \
              -e SPRING_DATASOURCE_PASSWORD=pwd \
              -p 8080:8080 \
              ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest

            # Start HTTP server
            docker run -d --name httpd \
              --network app-network \
              -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api-httpd:latest
          "


